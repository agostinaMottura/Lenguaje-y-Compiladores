#ifndef SIMBOLOS_TERMINALES_H
#define SIMBOLOS_TERMINALES_H

#define SIMBOLOS_TERMINALES_INIT_VALOR "INIT"

#define SIMBOLOS_TERMINALES_FLOAT_VALOR "FLOAT"
#define SIMBOLOS_TERMINALES_INT_VALOR "INT"
#define SIMBOLOS_TERMINALES_STRING_VALOR "STRING"

#define SIMBOLOS_TERMINALES_IF_VALOR "IF"
#define SIMBOLOS_TERMINALES_ELSE_VALOR "ELSE"
#define SIMBOLOS_TERMINALES_WHILE_VALOR "WHILE"
#define SIMBOLOS_TERMINALES_READ_VALOR "READ"
#define SIMBOLOS_TERMINALES_WRITE_VALOR "WRITE"

#define SIMBOLOS_TERMINALES_TRIANGLE_AREA_MAXIMUM_VALOR "TRIANGLE_AREA_MAXIMUM"
#define SIMBOLOS_TERMINALES_IS_ZERO_VALOR "IS_ZERO"

#define SIMBOLOS_TERMINALES_AND_VALOR "AND"
#define SIMBOLOS_TERMINALES_OR_VALOR "OR"
#define SIMBOLOS_TERMINALES_NOT_VALOR "NOT"

#define SIMBOLOS_TERMINALES_MAYOR_VALOR "MAYOR"
#define SIMBOLOS_TERMINALES_MENOR_VALOR "MENOR"
#define SIMBOLOS_TERMINALES_MAYOR_IGUAL_VALOR "MAYOR_IGUAL"
#define SIMBOLOS_TERMINALES_MENOR_IGUAL_VALOR "MENOR_IGUAL"
#define SIMBOLOS_TERMINALES_IGUAL_VALOR "IGUAL"
#define SIMBOLOS_TERMINALES_DISTINTO_VALOR "DISTINTO"

#define SIMBOLOS_TERMINALES_SUMA_VALOR "SUMA"
#define SIMBOLOS_TERMINALES_ASIGNACION_VALOR "ASIGNACION"
#define SIMBOLOS_TERMINALES_MULTIPLICACION_VALOR "MULTIPLICACION"
#define SIMBOLOS_TERMINALES_RESTA_VALOR "RESTA"
#define SIMBOLOS_TERMINALES_DIVISION_VALOR "DIVISION"

#define SIMBOLOS_TERMINALES_PARENTESIS_A_VALOR "PARENTESIS_A"
#define SIMBOLOS_TERMINALES_PARENTESIS_C_VALOR "PARENTESIS_C"

#define SIMBOLOS_TERMINALES_LLAVES_A_VALOR "LLAVES_A"
#define SIMBOLOS_TERMINALES_LLAVES_C_VALOR "LLAVES_C"

#define SIMBOLOS_TERMINALES_CORCHETE_A_VALOR "CORCHETE_A"
#define SIMBOLOS_TERMINALES_CORCHETE_C_VALOR "CORCHETE_C"

#define SIMBOLOS_TERMINALES_DOS_PUNTOS_VALOR "DOS_PUNTOS"
#define SIMBOLOS_TERMINALES_COMA_VALOR "COMA"
#define SIMBOLOS_TERMINALES_PUNTO_Y_COMA_VALOR "PUNTO_Y_COMA"

#define SIMBOLOS_TERMINALES_CTE_STRING_VALOR "CTE_STRING"
#define SIMBOLOS_TERMINALES_CTE_FLOAT_VALOR "CTE_FLOAT"
#define SIMBOLOS_TERMINALES_CTE_INT_VALOR "CTE_INT"

#define SIMBOLOS_TERMINALES_ID_VALOR "ID"

#define SIMBOLOS_TERMINALES_CANT 38
typedef enum
{
    SIMBOLOS_TERMINALES_INIT,

    SIMBOLOS_TERMINALES_FLOAT,
    SIMBOLOS_TERMINALES_INT,
    SIMBOLOS_TERMINALES_STRING,

    SIMBOLOS_TERMINALES_IF,
    SIMBOLOS_TERMINALES_ELSE,
    SIMBOLOS_TERMINALES_WHILE,
    SIMBOLOS_TERMINALES_READ,
    SIMBOLOS_TERMINALES_WRITE,

    SIMBOLOS_TERMINALES_TRIANGLE_AREA_MAXIMUM,
    SIMBOLOS_TERMINALES_IS_ZERO,

    SIMBOLOS_TERMINALES_AND,
    SIMBOLOS_TERMINALES_OR,
    SIMBOLOS_TERMINALES_NOT,

    SIMBOLOS_TERMINALES_MAYOR,
    SIMBOLOS_TERMINALES_MENOR,
    SIMBOLOS_TERMINALES_MAYOR_IGUAL,
    SIMBOLOS_TERMINALES_MENOR_IGUAL,
    SIMBOLOS_TERMINALES_IGUAL,
    SIMBOLOS_TERMINALES_DISTINTO,

    SIMBOLOS_TERMINALES_SUMA,
    SIMBOLOS_TERMINALES_ASIGNACION,
    SIMBOLOS_TERMINALES_MULTIPLICACION,
    SIMBOLOS_TERMINALES_RESTA,
    SIMBOLOS_TERMINALES_DIVISION,

    SIMBOLOS_TERMINALES_PARENTESIS_A,
    SIMBOLOS_TERMINALES_PARENTESIS_C,

    SIMBOLOS_TERMINALES_LLAVES_A,
    SIMBOLOS_TERMINALES_LLAVES_C,

    SIMBOLOS_TERMINALES_CORCHETE_A,
    SIMBOLOS_TERMINALES_CORCHETE_C,

    SIMBOLOS_TERMINALES_DOS_PUNTOS,
    SIMBOLOS_TERMINALES_COMA,
    SIMBOLOS_TERMINALES_PUNTO_Y_COMA,

    SIMBOLOS_TERMINALES_CTE_STRING,
    SIMBOLOS_TERMINALES_CTE_FLOAT,
    SIMBOLOS_TERMINALES_CTE_INT,

    SIMBOLOS_TERMINALES_ID
} t_simbolos_terminales;

const char *simbolos_terminales_obtener_valor(t_simbolos_terminales terminal);
t_simbolos_terminales simbolos_terminales_obtener_desde_string(const char *str);

#endif // SIMBOLOS_TERMINALES_H